{
  "address": "0xb2d12d80D56D6825b2505be652eD127276971cba",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc88b07803fccbb6edd6947a18cb7bf397161e0267bd35873be6d53aa225e12ac",
  "receipt": {
    "to": null,
    "from": "0x891A6584A0018F08B15155a938e3a49ae06dd5d1",
    "contractAddress": "0xb2d12d80D56D6825b2505be652eD127276971cba",
    "transactionIndex": 10,
    "gasUsed": "852819",
    "logsBloom": "0x
    "blockHash": "0xe6be05d4a48fecfc6153d76fe4bb33d2fa7d9586293f44f8e85a09678359ca80",
    "transactionHash": "0xc88b07803fccbb6edd6947a18cb7bf397161e0267bd35873be6d53aa225e12ac",
    "logs": [],
    "blockNumber": 11020549,
    "cumulativeGasUsed": "2112338",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "1edea837d3a82db8719d1fb05f817cef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n// Import locally using yarn add --dev @chainlink/contracts\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public immutable i_owner;\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n    // Creates a priceFeed variable of type AggregatorV3Interface\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Parameterizing priceFeedAddress\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ETH\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x98c444b21c6275104e48af05d2076287cb9ec1daf25c58c7f137e694f4b40902\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        // Converts (typecasts) int256 price into uint256 and returns value\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //Always do multiplications and addition operations before you divide\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInusd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInusd;\\n    }\\n}\\n\",\"keccak256\":\"0xdff29e81228e995d5de145f93122b224046798e55f58caabead007d53caac4ce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f71380380610f7183398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e0c610165600039600081816102c701526105530152610e0c6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102c5565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079a565b610506565b6040516100cb91906107e0565b60405180910390f35b3480156100e057600080fd5b506100e961051e565b6040516100f691906107e0565b60405180910390f35b34801561010b57600080fd5b5061011461052b565b604051610121919061085a565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610551565b6040516101569190610884565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108cb565b610575565b6040516101939190610884565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b490919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610955565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103f657600080828154811061036f5761036e610975565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ed906109d3565b9150905061034d565b50600067ffffffffffffffff81111561041257610411610a1c565b5b6040519080825280602002602001820160405280156104405781602001602082028036833780820191505090505b5060009080519060200190610456929190610690565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047d90610a7c565b60006040518083038185875af1925050503d80600081146104ba576040519150601f19603f3d011682016040523d82523d6000602084013e6104bf565b606091505b5050905080610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fa90610add565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c0836105f0565b90506000670de0b6b3a764000085836105d99190610afd565b6105e39190610b86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190610c44565b5050509150506402540be400816106889190610cbf565b915050919050565b828054828255906000526020600020908101928215610709579160200282015b828111156107085782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b0565b5b509050610716919061071a565b5090565b5b8082111561073357600081600090555060010161071b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107678261073c565b9050919050565b6107778161075c565b811461078257600080fd5b50565b6000813590506107948161076e565b92915050565b6000602082840312156107b0576107af610737565b5b60006107be84828501610785565b91505092915050565b6000819050919050565b6107da816107c7565b82525050565b60006020820190506107f560008301846107d1565b92915050565b6000819050919050565b600061082061081b6108168461073c565b6107fb565b61073c565b9050919050565b600061083282610805565b9050919050565b600061084482610827565b9050919050565b61085481610839565b82525050565b600060208201905061086f600083018461084b565b92915050565b61087e8161075c565b82525050565b60006020820190506108996000830184610875565b92915050565b6108a8816107c7565b81146108b357600080fd5b50565b6000813590506108c58161089f565b92915050565b6000602082840312156108e1576108e0610737565b5b60006108ef848285016108b6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b600061093f6016836108f8565b915061094a82610909565b602082019050919050565b6000602082019050818103600083015261096e81610932565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109de826107c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1157610a106109a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a66600083610a4b565b9150610a7182610a56565b600082019050919050565b6000610a8782610a59565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac7600b836108f8565b9150610ad282610a91565b602082019050919050565b60006020820190508181036000830152610af681610aba565b9050919050565b6000610b08826107c7565b9150610b13836107c7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4c57610b4b6109a4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b91826107c7565b9150610b9c836107c7565b925082610bac57610bab610b57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd681610bb7565b8114610be157600080fd5b50565b600081519050610bf381610bcd565b92915050565b6000819050919050565b610c0c81610bf9565b8114610c1757600080fd5b50565b600081519050610c2981610c03565b92915050565b600081519050610c3e8161089f565b92915050565b600080600080600060a08688031215610c6057610c5f610737565b5b6000610c6e88828901610be4565b9550506020610c7f88828901610c1a565b9450506040610c9088828901610c2f565b9350506060610ca188828901610c2f565b9250506080610cb288828901610be4565b9150509295509295909350565b6000610cca82610bf9565b9150610cd583610bf9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1457610d136109a4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5157610d506109a4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8e57610d8d6109a4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dcb57610dca6109a4565b5b82820290509291505056fea26469706673582212202207c0cb1e2f079f106e4efae7a2e7babd59c4c2bcba4923729a0ace9430156464736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff578063b60d42881461012a578063dba6335f14610134578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b6100956102c5565b005b3480156100a357600080fd5b506100be60048036038101906100b9919061079a565b610506565b6040516100cb91906107e0565b60405180910390f35b3480156100e057600080fd5b506100e961051e565b6040516100f691906107e0565b60405180910390f35b34801561010b57600080fd5b5061011461052b565b604051610121919061085a565b60405180910390f35b61013261019c565b005b34801561014057600080fd5b50610149610551565b6040516101569190610884565b60405180910390f35b34801561016b57600080fd5b50610186600480360381019061018191906108cb565b610575565b6040516101939190610884565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b490919063ffffffff16565b101561021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021390610955565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034a576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103f657600080828154811061036f5761036e610975565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ed906109d3565b9150905061034d565b50600067ffffffffffffffff81111561041257610411610a1c565b5b6040519080825280602002602001820160405280156104405781602001602082028036833780820191505090505b5060009080519060200190610456929190610690565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047d90610a7c565b60006040518083038185875af1925050503d80600081146104ba576040519150601f19603f3d011682016040523d82523d6000602084013e6104bf565b606091505b5050905080610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fa90610add565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c0836105f0565b90506000670de0b6b3a764000085836105d99190610afd565b6105e39190610b86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190610c44565b5050509150506402540be400816106889190610cbf565b915050919050565b828054828255906000526020600020908101928215610709579160200282015b828111156107085782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b0565b5b509050610716919061071a565b5090565b5b8082111561073357600081600090555060010161071b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107678261073c565b9050919050565b6107778161075c565b811461078257600080fd5b50565b6000813590506107948161076e565b92915050565b6000602082840312156107b0576107af610737565b5b60006107be84828501610785565b91505092915050565b6000819050919050565b6107da816107c7565b82525050565b60006020820190506107f560008301846107d1565b92915050565b6000819050919050565b600061082061081b6108168461073c565b6107fb565b61073c565b9050919050565b600061083282610805565b9050919050565b600061084482610827565b9050919050565b61085481610839565b82525050565b600060208201905061086f600083018461084b565b92915050565b61087e8161075c565b82525050565b60006020820190506108996000830184610875565b92915050565b6108a8816107c7565b81146108b357600080fd5b50565b6000813590506108c58161089f565b92915050565b6000602082840312156108e1576108e0610737565b5b60006108ef848285016108b6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b600061093f6016836108f8565b915061094a82610909565b602082019050919050565b6000602082019050818103600083015261096e81610932565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109de826107c7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1157610a106109a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a66600083610a4b565b9150610a7182610a56565b600082019050919050565b6000610a8782610a59565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac7600b836108f8565b9150610ad282610a91565b602082019050919050565b60006020820190508181036000830152610af681610aba565b9050919050565b6000610b08826107c7565b9150610b13836107c7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4c57610b4b6109a4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b91826107c7565b9150610b9c836107c7565b925082610bac57610bab610b57565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd681610bb7565b8114610be157600080fd5b50565b600081519050610bf381610bcd565b92915050565b6000819050919050565b610c0c81610bf9565b8114610c1757600080fd5b50565b600081519050610c2981610c03565b92915050565b600081519050610c3e8161089f565b92915050565b600080600080600060a08688031215610c6057610c5f610737565b5b6000610c6e88828901610be4565b9550506020610c7f88828901610c1a565b9450506040610c9088828901610c2f565b9350506060610ca188828901610c2f565b9250506080610cb288828901610be4565b9150509295509295909350565b6000610cca82610bf9565b9150610cd583610bf9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1457610d136109a4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5157610d506109a4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8e57610d8d6109a4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dcb57610dca6109a4565b5b82820290509291505056fea26469706673582212202207c0cb1e2f079f106e4efae7a2e7babd59c4c2bcba4923729a0ace9430156464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 76,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 80,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 98,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}