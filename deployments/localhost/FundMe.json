{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x028ab9b42f7f4af0a482064ee2e91cee72dc63c50983ae2be9bde1d81e304636",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "847485",
    "logsBloom": "0x
    "blockHash": "0xe83b018a97eefba9d2c09e008c7c71fa6fd2680a5d7add431b212e8b8eed20fd",
    "transactionHash": "0x028ab9b42f7f4af0a482064ee2e91cee72dc63c50983ae2be9bde1d81e304636",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "847485",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "761f7c2ce3df3c3b71779bcec229141d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Umoja Software Labs\",\"details\":\"This implements PriceFeed as a library NatSpec can be used to automatically output user  documentation by running solc  --userdoc --devdoc example.sol in the terminal.\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements PriceFeed as a library\"}},\"title\":\"A Contract for Cowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"NatSpecThis contact is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Best Practices in Solidity\\n\\n// 1. License Identifier\\n\\n// 2. Solidity Version\\npragma solidity ^0.8.8;\\n\\n// 3. Imports locally using yarn add --dev @chainlink/contracts\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 4. Custom Errors\\nerror FundMe__NotOwner();\\n\\n// 5. Interfaces, Libraries and Contracts\\n\\n/** NatSpec\\n *  @title A Contract for Cowdfunding\\n *  @author Umoja Software Labs\\n *  @notice This contact is to demo a sample funding contract\\n *  @dev   This implements PriceFeed as a library\\n\\n NatSpec can be used to automatically output user \\n documentation by running solc  --userdoc --devdoc example.sol\\n in the terminal.\\n */\\n\\ncontract FundMe {\\n    // 1. Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // 2. State Variables\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    // 3. Events\\n\\n    // 4. Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    /* 5. Functions\\n       Function Order:\\n       1. constructor\\n       2. receive\\n       3. fallback\\n       4. external\\n       5. public\\n       6. internal\\n       7. private\\n       8. view / pure\\n    */\\n\\n    // Parameterizing priceFeedAddress\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     *  @notice This function funds this contract\\n     *  @dev   This implements PriceFeed as a library\\n     */\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ETH\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x31442fec816b48089afb12537233efbcf3b70a74c1803b28d505cf50a3e13a97\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        // Converts (typecasts) int256 price into uint256 and returns value\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //Always do multiplications and addition operations before you divide\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInusd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInusd;\\n    }\\n}\\n\",\"keccak256\":\"0xdff29e81228e995d5de145f93122b224046798e55f58caabead007d53caac4ce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f58380380610f5883398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610df361016560003960008181610186015261053a0152610df36000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100e7578063b60d428814610112578063dba6335f1461011c578063dc0d3dff1461014757610070565b80633ccfd60b146100755780633e47d6f31461007f5780636b69a592146100bc575b600080fd5b61007d610184565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610781565b6103c5565b6040516100b391906107c7565b60405180910390f35b3480156100c857600080fd5b506100d16103dd565b6040516100de91906107c7565b60405180910390f35b3480156100f357600080fd5b506100fc6103ea565b6040516101099190610841565b60405180910390f35b61011a610410565b005b34801561012857600080fd5b50610131610538565b60405161013e919061086b565b60405180910390f35b34801561015357600080fd5b5061016e600480360381019061016991906108b2565b61055c565b60405161017b919061086b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610209576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102b55760006001828154811061022f5761022e6108df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ac9061093d565b9150905061020c565b50600067ffffffffffffffff8111156102d1576102d0610986565b5b6040519080825280602002602001820160405280156102ff5781602001602082028036833780820191505090505b5060019080519060200190610315929190610677565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161033c906109e6565b60006040518083038185875af1925050503d8060008114610379576040519150601f19603f3d011682016040523d82523d6000602084013e61037e565b606091505b50509050806103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610a58565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061044f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461059b90919063ffffffff16565b1015610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610ac4565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061056c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105a7836105d7565b90506000670de0b6b3a764000085836105c09190610ae4565b6105ca9190610b6d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610c2b565b5050509150506402540be4008161066f9190610ca6565b915050919050565b8280548282559060005260206000209081019282156106f0579160200282015b828111156106ef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610697565b5b5090506106fd9190610701565b5090565b5b8082111561071a576000816000905550600101610702565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074e82610723565b9050919050565b61075e81610743565b811461076957600080fd5b50565b60008135905061077b81610755565b92915050565b6000602082840312156107975761079661071e565b5b60006107a58482850161076c565b91505092915050565b6000819050919050565b6107c1816107ae565b82525050565b60006020820190506107dc60008301846107b8565b92915050565b6000819050919050565b60006108076108026107fd84610723565b6107e2565b610723565b9050919050565b6000610819826107ec565b9050919050565b600061082b8261080e565b9050919050565b61083b81610820565b82525050565b60006020820190506108566000830184610832565b92915050565b61086581610743565b82525050565b6000602082019050610880600083018461085c565b92915050565b61088f816107ae565b811461089a57600080fd5b50565b6000813590506108ac81610886565b92915050565b6000602082840312156108c8576108c761071e565b5b60006108d68482850161089d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610948826107ae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097b5761097a61090e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109d06000836109b5565b91506109db826109c0565b600082019050919050565b60006109f1826109c3565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a42600b836109fb565b9150610a4d82610a0c565b602082019050919050565b60006020820190508181036000830152610a7181610a35565b9050919050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b6000610aae6016836109fb565b9150610ab982610a78565b602082019050919050565b60006020820190508181036000830152610add81610aa1565b9050919050565b6000610aef826107ae565b9150610afa836107ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3357610b3261090e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b78826107ae565b9150610b83836107ae565b925082610b9357610b92610b3e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bbd81610b9e565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b6000819050919050565b610bf381610be0565b8114610bfe57600080fd5b50565b600081519050610c1081610bea565b92915050565b600081519050610c2581610886565b92915050565b600080600080600060a08688031215610c4757610c4661071e565b5b6000610c5588828901610bcb565b9550506020610c6688828901610c01565b9450506040610c7788828901610c16565b9350506060610c8888828901610c16565b9250506080610c9988828901610bcb565b9150509295509295909350565b6000610cb182610be0565b9150610cbc83610be0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cfb57610cfa61090e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d3857610d3761090e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7557610d7461090e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610db257610db161090e565b5b82820290509291505056fea26469706673582212201cf0d83016a82a518da0e2073c6183f78d7fb155d9f8d65e8c40ca408b1d3f5064736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100e7578063b60d428814610112578063dba6335f1461011c578063dc0d3dff1461014757610070565b80633ccfd60b146100755780633e47d6f31461007f5780636b69a592146100bc575b600080fd5b61007d610184565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610781565b6103c5565b6040516100b391906107c7565b60405180910390f35b3480156100c857600080fd5b506100d16103dd565b6040516100de91906107c7565b60405180910390f35b3480156100f357600080fd5b506100fc6103ea565b6040516101099190610841565b60405180910390f35b61011a610410565b005b34801561012857600080fd5b50610131610538565b60405161013e919061086b565b60405180910390f35b34801561015357600080fd5b5061016e600480360381019061016991906108b2565b61055c565b60405161017b919061086b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610209576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102b55760006001828154811061022f5761022e6108df565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ac9061093d565b9150905061020c565b50600067ffffffffffffffff8111156102d1576102d0610986565b5b6040519080825280602002602001820160405280156102ff5781602001602082028036833780820191505090505b5060019080519060200190610315929190610677565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161033c906109e6565b60006040518083038185875af1925050503d8060008114610379576040519150601f19603f3d011682016040523d82523d6000602084013e61037e565b606091505b50509050806103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610a58565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061044f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461059b90919063ffffffff16565b1015610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610ac4565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061056c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105a7836105d7565b90506000670de0b6b3a764000085836105c09190610ae4565b6105ca9190610b6d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561062057600080fd5b505afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610c2b565b5050509150506402540be4008161066f9190610ca6565b915050919050565b8280548282559060005260206000209081019282156106f0579160200282015b828111156106ef5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610697565b5b5090506106fd9190610701565b5090565b5b8082111561071a576000816000905550600101610702565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074e82610723565b9050919050565b61075e81610743565b811461076957600080fd5b50565b60008135905061077b81610755565b92915050565b6000602082840312156107975761079661071e565b5b60006107a58482850161076c565b91505092915050565b6000819050919050565b6107c1816107ae565b82525050565b60006020820190506107dc60008301846107b8565b92915050565b6000819050919050565b60006108076108026107fd84610723565b6107e2565b610723565b9050919050565b6000610819826107ec565b9050919050565b600061082b8261080e565b9050919050565b61083b81610820565b82525050565b60006020820190506108566000830184610832565b92915050565b61086581610743565b82525050565b6000602082019050610880600083018461085c565b92915050565b61088f816107ae565b811461089a57600080fd5b50565b6000813590506108ac81610886565b92915050565b6000602082840312156108c8576108c761071e565b5b60006108d68482850161089d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610948826107ae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561097b5761097a61090e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109d06000836109b5565b91506109db826109c0565b600082019050919050565b60006109f1826109c3565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a42600b836109fb565b9150610a4d82610a0c565b602082019050919050565b60006020820190508181036000830152610a7181610a35565b9050919050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b6000610aae6016836109fb565b9150610ab982610a78565b602082019050919050565b60006020820190508181036000830152610add81610aa1565b9050919050565b6000610aef826107ae565b9150610afa836107ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3357610b3261090e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b78826107ae565b9150610b83836107ae565b925082610b9357610b92610b3e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bbd81610b9e565b8114610bc857600080fd5b50565b600081519050610bda81610bb4565b92915050565b6000819050919050565b610bf381610be0565b8114610bfe57600080fd5b50565b600081519050610c1081610bea565b92915050565b600081519050610c2581610886565b92915050565b600080600080600060a08688031215610c4757610c4661071e565b5b6000610c5588828901610bcb565b9550506020610c6688828901610c01565b9450506040610c7788828901610c16565b9350506060610c8888828901610c16565b9250506080610c9988828901610bcb565b9150509295509295909350565b6000610cb182610be0565b9150610cbc83610be0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cfb57610cfa61090e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d3857610d3761090e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d7557610d7461090e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610db257610db161090e565b5b82820290509291505056fea26469706673582212201cf0d83016a82a518da0e2073c6183f78d7fb155d9f8d65e8c40ca408b1d3f5064736f6c63430008080033",
  "devdoc": {
    "author": "Umoja Software Labs",
    "details": "This implements PriceFeed as a library NatSpec can be used to automatically output user  documentation by running solc  --userdoc --devdoc example.sol in the terminal.",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements PriceFeed as a library"
      }
    },
    "title": "A Contract for Cowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "NatSpecThis contact is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}